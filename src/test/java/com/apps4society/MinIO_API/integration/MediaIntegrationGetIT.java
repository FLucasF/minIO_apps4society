//package com.apps4society.MinIO_API.integration;
//
//import org.junit.jupiter.api.DisplayName;
//import org.junit.jupiter.api.Test;
//
//import java.util.Map;
//
//import static io.restassured.RestAssured.given;
//import static org.hamcrest.Matchers.*;
//
//public class MediaIntegrationGetIT extends BaseMediaIntegrationTest {
//
//    @Test
//    @DisplayName("GET /api/media/{serviceName}/{mediaId} - Buscar URL de mÃ­dia existente (200 OK)")
//    void testGetMediaUrl_Success_ShouldReturn200() {
//        // ðŸ”¹ Criando mÃ­dia de teste
//        Map<String, Object> testMedia = createTestMedia();
//
//        // ðŸ”¹ Buscando a URL da mÃ­dia enviada
//        given()
//                .pathParam("serviceName", testMedia.get("serviceName"))
//                .pathParam("mediaId", testMedia.get("id"))
//                .header("api-key", API_KEY)
//                .accept("text/plain") // ðŸ”¹ Aceita resposta `text/plain`
//                .when()
//                .get("/api/media/{serviceName}/{mediaId}")
//                .then()
//                .statusCode(200) // ðŸ”¹ Deve retornar 200 OK
//                .contentType("text/plain") // ðŸ”¹ Confirma que a resposta Ã© `text/plain`
//                .body(not(emptyOrNullString())) // ðŸ”¹ Verifica que nÃ£o estÃ¡ vazia
//                .body(matchesPattern("http.*")); // ðŸ”¹ Verifica que a resposta contÃ©m uma URL vÃ¡lida
//
//        // ðŸ”¹ Limpando a mÃ­dia apÃ³s o teste
//        cleanupTestMedia(TEST_IMAGE_NAME);
//    }
//
//    @Test
//    @DisplayName("GET /api/media/{serviceName}/{mediaId} - MÃ­dia nÃ£o encontrada (404 NOT FOUND)")
//    void testGetMedia_NotFound_ShouldReturn404() {
//        given()
//                .pathParam("serviceName", SERVICE_NAME)
//                .pathParam("mediaId", 99999L) // ID inexistente
//                .header("api-key", API_KEY)
//                .when()
//                .get("/api/media/{serviceName}/{mediaId}")
//                .then()
//                .statusCode(404);
//    }
//}
