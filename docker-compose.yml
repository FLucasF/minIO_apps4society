networks:
  minio_network:
    external: true #usei para testar com um back separado, caso n√£o for usar apagar

volumes:
  minio-data:

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: db
    ports:
      - "3308:3306"
    volumes:
      - minio-data:/var/lib/mysql
    networks:
      - minio_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 10s

  minio:
    image: minio/minio
    container_name: minio
    restart: always
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_SERVER_URL: http://localhost:9000
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9090
      TZ: America/Sao_Paulo
    command: server --console-address ":9090" /data
    volumes:
      - minio-data:/data
      - ./create-bucket.sh:/create-bucket.sh
    networks:
      - minio_network
    depends_on:
      mysql:
        condition: service_healthy

  minio_api:
    build: .
    container_name: minio_api
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      minio:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 123456
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET_NAME: test
      SERVER_PORT: 8080
      TZ: America/Sao_Paulo
    ports:
      - "8080:8080"
    networks:
      - minio_network
